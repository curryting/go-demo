// Code generated by goctl. DO NOT EDIT!
// Source: chat.proto

package chatcenter

import (
	"context"

	"wx-chat/service/chat/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ChatContent  = pb.ChatContent
	ChatListReq  = pb.ChatListReq
	ChatListResp = pb.ChatListResp

	ChatCenter interface {
		GetChatList(ctx context.Context, in *ChatListReq, opts ...grpc.CallOption) (*ChatListResp, error)
	}

	defaultChatCenter struct {
		cli zrpc.Client
	}
)

func NewChatCenter(cli zrpc.Client) ChatCenter {
	return &defaultChatCenter{
		cli: cli,
	}
}

func (m *defaultChatCenter) GetChatList(ctx context.Context, in *ChatListReq, opts ...grpc.CallOption) (*ChatListResp, error) {
	client := pb.NewChatCenterClient(m.cli.Conn())
	return client.GetChatList(ctx, in, opts...)
}
